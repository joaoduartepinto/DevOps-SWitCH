pipeline {
    environment {
        registry = 'joaopintodev/ca5-part2-jenkins'
        registryCredential = 'docker-hub_credentials'
        dockerImage = ''
    }
    
    agent any
    
    stages {
        
        stage("Checkout") {
            steps{
                echo 'Checkout'
                git credentialsId: 'bitbucket-credentials', url: 'https://bitbucket.org/Joao_Pinto_1201765/devops-20-21-1201765/src/master/'
            }
        }

        
        stage("Assemble") {
            steps{
                echo 'Assemble'
                dir('Ca2/part_2/tut-basic-gradle/'){
                    script {
                        if(isUnix() == true) {
                            sh './gradlew clean assemble'
                        } else {
                            bat './gradlew clean assemble'
                        }
                    }
                    
                }
            }
        }
    
        stage("Test") {
            steps{
                echo 'Test'
                dir('Ca2/part_2/tut-basic-gradle/'){
                    script{
                        if (isUnix() == true) {
                            sh './gradlew test'
                        } else {
                            bat './gradlew test'
                        }
                    }
                    junit 'build/test-results/**/*.xml'
                }
            }
        }
        
        stage("Javadoc") {
            steps{
                echo 'Javadoc'
                dir('Ca2/part_2/tut-basic-gradle/'){
                    script{
                        if (isUnix() == true) {
                            sh './gradlew javadoc'
                        } else {
                            bat './gradlew javadoc'
                        }
                    }
                    publishHTML (target: [
                        keepAll: true,
                        reportDir: 'build/docs/javadoc/',
                        reportFiles: 'index.html',
                        reportName: 'Javadoc'
                  ])
                }
            }
        }
        
        stage("Archive") {
            steps{
                echo 'Archive'
                dir('Ca2/part_2/tut-basic-gradle/'){
                    archiveArtifacts artifacts: 'build/libs/**/*.war'    
                }
            }
        }
        
        stage("Publish Image") {
            steps{
                echo 'Publish Image'
                dir('Ca2/part_2/tut-basic-gradle/'){
                    script{
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                        docker.withRegistry( '', registryCredential ) {
                            dockerImage.push()
                        }
                    }
                    sh "docker rmi $registry:$BUILD_NUMBER"
                }
            }
        }
    }
}